class Solution {
public:
    void helper(string out,int n,int open,int close,int i,vector<string>&ans){
        if(i==2*n){
            ans.push_back(out);
        }
        if(open<n){
            helper(out+'(',n,open+1,close,i+1,ans);
        }
        if(close<open){
            helper(out+')',n,open,close+1,i+1,ans);
        }
    }
    vector<string> generateParenthesis(int n) {
        string out="";
        vector<string>ans;
        helper(out,n,0,0,0,ans);
        return ans;
    }
};
